{"version":3,"sources":["./$_lazy_route_resource lazy namespace object","./src/app/app-routing.module.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/app/post-dialog/post-dialog.component.ts","./src/app/post-dialog/post-dialog.component.html","./src/app/post.service.ts","./src/app/post.ts","./src/app/post/post.component.ts","./src/app/post/post.component.html","./src/environments/environment.ts","./src/main.ts"],"names":[],"mappings":";;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAE;AACF;AACA,4CAA4C,WAAW;AACvD;AACA;AACA,wE;;;;;;;;;;;;ACZA;AAAA;AAAA;AAAA;AAAyC;AACc;;;AAGvD,MAAM,MAAM,GAAW,EAAE,CAAC;AAMnB,MAAM,gBAAgB;;+FAAhB,gBAAgB;0JAAhB,gBAAgB,kBAHlB,CAAC,4DAAY,CAAC,OAAO,CAAC,MAAM,CAAC,CAAC;QAC7B,4DAAY;mIAEX,gBAAgB,uFAFjB,4DAAY;6FAEX,gBAAgB;cAJ5B,sDAAQ;eAAC;gBACR,OAAO,EAAE,CAAC,4DAAY,CAAC,OAAO,CAAC,MAAM,CAAC,CAAC;gBACvC,OAAO,EAAE,CAAC,4DAAY,CAAC;aACxB;;;;;;;;;;;;;;ACTD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAA0C;AAGgC;;;;;;;;;;;;ICItE,yEAAwD;;;IAAtB,sEAAU;;ADIzC,MAAM,YAAY;IAIvB,YAAmB,MAAiB,EAAS,WAAwB;QAAlD,WAAM,GAAN,MAAM,CAAW;QAAS,gBAAW,GAAX,WAAW,CAAa;QAHrE,UAAK,GAAG,aAAa,CAAC;IAGiD,CAAC;IAExE,QAAQ;QACN,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC,WAAW,CAAC,KAAK,CAAC;IACtC,CAAC;IAED,UAAU;QACR,MAAM,SAAS,GAAG,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,sFAAmB,EAAE,EAAC,KAAK,EAAE,OAAO,EAAC,CAAC,CAAC;QAE1E,SAAS,CAAC,WAAW,EAAE,CAAC,SAAS,CAC/B,CAAC,MAAM,EAAE,EAAE;YAAG,IAAG,MAAM,EAAC;gBACR,IAAI,CAAC,WAAW,CAAC,MAAM,CAAC,MAAM,CAAC,IAAI,EAAE,MAAM,CAAC,OAAO,CAAC;aACrD;QACf,CAAC,CACF,CAAC;IACJ,CAAC;;wEAnBU,YAAY;4FAAZ,YAAY;QCXzB,iFACI;QAAA,uEAAM;QAAA,oFAAyB;QAAA,4DAAO;QAC1C,4DAAc;QAEd,yEAA2B;QAE3B,yEACI;QAAA,kHAA6C;QACjD,4DAAM;QAEN,4EACI;QADiD,0IAAS,gBAAY,IAAC;QACvE,2EACI;QAAA,gEACJ;QAAA,4DAAW;QACf,4DAAS;;QAPK,0DAAuB;QAAvB,8EAAuB;;6FDIxB,YAAY;cALxB,uDAAS;eAAC;gBACT,QAAQ,EAAE,UAAU;gBACpB,WAAW,EAAE,sBAAsB;gBACnC,SAAS,EAAE,CAAC,qBAAqB,CAAC;aACnC;;;;;;;;;;;;;;AEVD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAA0D;AACjB;AAEe;AACT;AACC;AACgC;AACvB;AACA;AACF;AACE;AACJ;AACM;AACJ;AACI;AACJ;AACD;AACD;AACG;AACkB;AAC3B;AACF;AACW;;AAkCjD,MAAM,SAAS;;wFAAT,SAAS,cAFR,2DAAY;4IAEb,SAAS,mBAHT,CAAC,0DAAW,EAAE,EAAC,OAAO,EAAE,6DAAa,EAAE,QAAQ,EAAG,GAAG,EAAE,CAAC,YArB1D;YACP,uEAAa;YACb,oEAAgB;YAChB,4FAAuB;YACvB,sEAAgB;YAChB,wEAAe;YACf,wEAAe;YACf,sEAAc;YACd,qEAAa;YACb,wEAAe;YACf,2EAAgB;YAChB,uEAAc;YACd,2EAAgB;YAChB,uEAAc;YACd,qEAAa;YACb,2DAAW;YACX,sEAAgB;SACjB;mIAOU,SAAS,mBA7BlB,2DAAY;QACZ,mEAAa;QACb,uFAAmB,aAInB,uEAAa;QACb,oEAAgB;QAChB,4FAAuB;QACvB,sEAAgB;QAChB,wEAAe;QACf,wEAAe;QACf,sEAAc;QACd,qEAAa;QACb,wEAAe;QACf,2EAAgB;QAChB,uEAAc;QACd,2EAAgB;QAChB,uEAAc;QACd,qEAAa;QACb,2DAAW;QACX,sEAAgB;6FAQP,SAAS;cA/BrB,sDAAQ;eAAC;gBACR,YAAY,EAAE;oBACZ,2DAAY;oBACZ,mEAAa;oBACb,uFAAmB;iBAEpB;gBACD,OAAO,EAAE;oBACP,uEAAa;oBACb,oEAAgB;oBAChB,4FAAuB;oBACvB,sEAAgB;oBAChB,wEAAe;oBACf,wEAAe;oBACf,sEAAc;oBACd,qEAAa;oBACb,wEAAe;oBACf,2EAAgB;oBAChB,uEAAc;oBACd,2EAAgB;oBAChB,uEAAc;oBACd,qEAAa;oBACb,2DAAW;oBACX,sEAAgB;iBACjB;gBACD,eAAe,EAAE;oBACf,uFAAmB;iBACpB;gBACD,SAAS,EAAE,CAAC,0DAAW,EAAE,EAAC,OAAO,EAAE,6DAAa,EAAE,QAAQ,EAAG,GAAG,EAAE,CAAC;gBACnE,SAAS,EAAE,CAAC,2DAAY,CAAC;aAC1B;;;;;;;;;;;;;;ACvDD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAkD;AAEnB;;;;;;;;;;;ICqC/B,oEACI;IAAA,yEAAQ;IAAA,oEAAS;IAAA,4DAAS;IAAA,uDAC1B;IAAA,+EAA0B;IAAA,+DAAI;IAAA,4DAAW;IAC7C,4DAAI;;;IAF0B,0DAC1B;IAD0B,6FAC1B;;ADhCG,MAAM,mBAAmB;IAS9B,YACS,SAA4C;QAA5C,cAAS,GAAT,SAAS,CAAmC;QAR9C,gBAAW,GAAW,EAAE,CAAC;QAEzB,UAAK,GAAG;YACb,IAAI,EAAE,IAAI,0CAAI,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAG,EAAE,CAAC;YACnC,OAAO,EAAE,IAAI;SACd;IAIG,CAAC;IAEL,QAAQ;IACR,CAAC;IAED,YAAY,CAAC,KAAK;QAChB,sCAAsC;QACtC,IAAI,CAAC,WAAW,GAAG,KAAK,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC;QAC9C,IAAI,CAAC,KAAK,CAAC,OAAO,GAAG,KAAK,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC;IAC7C,CAAC;IAED,MAAM;QACJ,IAAI,CAAC,SAAS,CAAC,KAAK,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;IACnC,CAAC;IAED,QAAQ;QACN,IAAI,CAAC,SAAS,CAAC,KAAK,CAAC,IAAI,CAAC,CAAC;IAC7B,CAAC;;sFA5BU,mBAAmB;mGAAnB,mBAAmB;;QCThC,yEACI;QAAA,yEACI;QAAA,oFACI;QAAA,2EACA;QADuC,gMAA6B;QAApE,4DACA;QAAA,2EAAU;QAAA,iFAAsB;QAAA,4DAAW;QAC/C,4DAAiB;QAEjB,oFACI;QAAA,2EACA;QADwC,iMAA8B;QAAtE,4DACA;QAAA,2EAAU;QAAA,kFAAuB;QAAA,4DAAW;QAChD,4DAAiB;QACrB,4DAAM;QAEN,0EACI;QAAA,qFACI;QAAA,4EACA;QADyC,mMAA+B;QAAxE,4DACA;QAAA,4EAAU;QAAA,oFAAwB;QAAA,4DAAW;QACjD,4DAAiB;QAEjB,qFACI;QAAA,4EACA;QAD6C,sMAAkC;QAA/E,4DACA;QAAA,4EAAU;QAAA,oFAAwB;QAAA,4DAAW;QACjD,4DAAiB;QACrB,4DAAM;QAEN,kFACI;QAAA,+EAAsG;QAA7C,wMAAiC;QAAC,4DAAW;QAC1G,4DAAiB;QACrB,4DAAM;QAEN,gFAEA;QAF0C,mJAAU,wBAAoB,IAAC;QAAzE,4DAEA;QAAA,8EACI;QADuC,+RAAS,WAAiB,IAAC;QAClE,4EACI;QAAA,yEACJ;QAAA,4DAAW;QACX,iFACJ;QAAA,4DAAS;QAET,8GACI;QAIJ,iEAAI;QAAA,iEAEJ;QAAA,2EACI;QAAA,8EAA6D;QAAnB,kJAAS,YAAQ,IAAC;QAAC,8DAAE;QAAA,4DAAS;QACxE,8EAA4D;QAArB,kJAAS,cAAU,IAAC;QAAC,oEAAQ;QAAA,4DAAS;QACjF,4DAAM;;QA9C6C,0DAA6B;QAA7B,wFAA6B;QAK5B,0DAA8B;QAA9B,yFAA8B;QAO7B,0DAA+B;QAA/B,0FAA+B;QAK3B,0DAAkC;QAAlC,6FAAkC;QAM1B,0DAAiC;QAAjC,4FAAiC;QAa/F,0DAAuB;QAAvB,uFAAuB;;6FD9Bb,mBAAmB;cAL/B,uDAAS;eAAC;gBACT,QAAQ,EAAE,iBAAiB;gBAC3B,WAAW,EAAE,8BAA8B;gBAC3C,SAAS,EAAE,CAAC,6BAA6B,CAAC;aAC3C;;;;;;;;;;;;;;AERD;AAAA;AAAA;AAAA;AAAA;AAA2C;AACiC;AAC9C;;;AAKvB,MAAM,WAAW;IAItB,YAAoB,IAAgB;QAAhB,SAAI,GAAJ,IAAI,CAAY;QAF7B,UAAK,GAAW,EAAE,CAAC;QAGtB,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,OAAO,CAAC,CAAC,SAAS,CAC5B,CAAC,KAAY,EAAE,EAAE;YACb,KAAK,IAAI,CAAC,IAAI,KAAK,EAAE;gBACjB,IAAI,CAAC,KAAK,CAAC,IAAI,CACX,IAAI,0CAAI,CAAC,CAAC,CAAC,IAAI,EAAE,CAAC,CAAC,MAAM,EAAE,CAAC,CAAC,SAAS,EAAE,CAAC,CAAC,KAAK,EAAE,CAAC,CAAC,QAAQ,EAAE,CAAC,CAAC,OAAO,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,KAAK,CAAC,CACzF;aACJ;QACL,CAAC,CACJ,CAAC;IACN,CAAC;IAED,MAAM,CAAC,IAAU,EAAE,IAAU;QACzB,MAAM,UAAU,GAAG,IAAI,QAAQ,EAAE,CAAC;QAElC,UAAU,CAAC,MAAM,CAAC,MAAM,EAAE,IAAI,CAAC,IAAI,CAAC,CAAC;QACrC,UAAU,CAAC,MAAM,CAAC,OAAO,EAAE,IAAI,CAAC,MAAM,CAAC,CAAC;QACxC,UAAU,CAAC,MAAM,CAAC,QAAQ,EAAE,IAAI,CAAC,MAAM,CAAC,CAAC;QACzC,UAAU,CAAC,MAAM,CAAC,WAAW,EAAE,IAAI,CAAC,SAAS,CAAC,CAAC;QAC/C,UAAU,CAAC,MAAM,CAAC,UAAU,EAAE,IAAI,CAAC,QAAQ,CAAC,CAAC;QAC7C,UAAU,CAAC,MAAM,CAAC,SAAS,EAAE,IAAI,CAAC,CAAC;QAEnC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,OAAO,EAAE,UAAU,EAAE,EAAE,cAAc,EAAE,IAAI,EAAE,OAAO,EAAE,QAAQ,EAAE,CAAC,CAAC,SAAS,CAAC,CAAC,KAAU,EAAE,EAAE;YACpG,IAAI,KAAK,CAAC,IAAI,IAAI,kEAAa,CAAC,QAAQ,EAAE;gBACxC,sBAAsB;gBACtB,IAAI,CAAC,GAAQ,KAAK,CAAC,IAAI,CAAC;gBACxB,IAAI,CAAC,KAAK,CAAC,IAAI,CACb,IAAI,0CAAI,CAAC,CAAC,CAAC,IAAI,EAAE,CAAC,CAAC,MAAM,EAAE,CAAC,CAAC,SAAS,EAAE,CAAC,CAAC,KAAK,EAAE,CAAC,CAAC,QAAQ,EAAE,CAAC,CAAC,OAAO,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,KAAK,CAAC,CACvF;aACF;YAED,IAAI,KAAK,CAAC,IAAI,IAAI,kEAAa,CAAC,cAAc,EAAE;gBAC9C,OAAO,CAAC,GAAG,CAAC,gBAAgB,CAAC,CAAC;gBAC9B,OAAO,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC;aACpB;QACH,CAAC,CACJ,CAAC;IACN,CAAC;;sEAzCU,WAAW;8FAAX,WAAW,WAAX,WAAW,mBAFV,MAAM;6FAEP,WAAW;cAHvB,wDAAU;eAAC;gBACV,UAAU,EAAE,MAAM;aACnB;;;;;;;;;;;;;;ACND;AAAA;AAAO,MAAM,IAAI;IACb,YACW,IAAkB,EAClB,MAAkB,EAClB,SAAkB,EAClB,KAAkB,EAClB,QAAkB;IACzB,sBAAsB;IACf,OAAkB,EAClB,EAAkB,EAClB,KAAkB;QARlB,SAAI,GAAJ,IAAI,CAAc;QAClB,WAAM,GAAN,MAAM,CAAY;QAClB,cAAS,GAAT,SAAS,CAAS;QAClB,UAAK,GAAL,KAAK,CAAa;QAClB,aAAQ,GAAR,QAAQ,CAAU;QAElB,YAAO,GAAP,OAAO,CAAW;QAClB,OAAE,GAAF,EAAE,CAAgB;QAClB,UAAK,GAAL,KAAK,CAAa;IAC3B,CAAC;CACN;;;;;;;;;;;;;ACZD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAyD;;;;;AASlD,MAAM,aAAa;IAIxB;IAAgB,CAAC;IAEjB,QAAQ;IACR,CAAC;;0EAPU,aAAa;6FAAb,aAAa;QCT1B,8EACI;QAAA,kFACE;QAAA,oEAA2B;QAC3B,iFAAgB;QAAA,uDAAe;QAAA,4DAAiB;QAChD,oFAAmB;QAAA,uDAAkB;QAAA,4DAAoB;QAC3D,4DAAkB;QAClB,oEACA;QAAA,mFACE;QAAA,oEACE;QAAA,wDACF;QAAA,4DAAI;QACN,4DAAmB;QACnB,oFACE;QAAA,6EAAmB;QAAA,gEAAI;QAAA,4DAAS;QAChC,6EAAmB;QAAA,iEAAK;QAAA,4DAAS;QACnC,4DAAmB;QACrB,4DAAW;;QAbS,0DAAe;QAAf,gFAAe;QACZ,0DAAkB;QAAlB,mFAAkB;QAEnB,0DAA+B;QAA/B,2KAA+B;QAG/C,0DACF;QADE,6FACF;;6FDDO,aAAa;cALzB,uDAAS;eAAC;gBACT,QAAQ,EAAE,UAAU;gBACpB,WAAW,EAAE,uBAAuB;gBACpC,SAAS,EAAE,CAAC,sBAAsB,CAAC;aACpC;;kBAGE,mDAAK;;;;;;;;;;;;;;AEXR;AAAA;AAAA,gFAAgF;AAChF,0EAA0E;AAC1E,gEAAgE;AAEzD,MAAM,WAAW,GAAG;IACzB,UAAU,EAAE,KAAK;CAClB,CAAC;AAEF;;;;;;GAMG;AACH,mEAAmE;;;;;;;;;;;;;ACfnE;AAAA;AAAA;AAAA;AAAA;AAA+C;AAIU;;;AAEzD,IAAI,qEAAW,CAAC,UAAU,EAAE;IAC1B,oEAAc,EAAE,CAAC;CAClB;AAED,2EAAwB,gBAAgB,CAAC,0DAAU;KAChD,KAAK,CAAC,GAAG,CAAC,EAAE,CAAC,OAAO,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC","file":"main-es2015.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\n\nconst routes: Routes = [];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","import { Component } from '@angular/core';\nimport { Post } from './post';\nimport { MatDialog } from '@angular/material/dialog';\nimport { PostDialogComponent } from './post-dialog/post-dialog.component';\nimport { PostService } from './post.service';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'postImagens';\n  public posts: Post[];\n\n  constructor(public dialog: MatDialog, public postService: PostService){}\n  \n  ngOnInit(){\n    this.posts = this.postService.posts;\n  }\n\n  openDialog(){\n    const dialogRef = this.dialog.open(PostDialogComponent, {width: '600px'});\n\n    dialogRef.afterClosed().subscribe(\n      (result) => { if(result){\n                      this.postService.salvar(result.post, result.arquivo)\n                    } \n      }\n    );\n  }\n}\n","<mat-toolbar color=\"primary\">\n    <span>Projeto Laravel + Angular</span>\n</mat-toolbar>\n\n<mat-divider></mat-divider>\n\n<div fxLayout=\"row wrap\" fxLayoutAlign=\"space-around stretch\">\n    <app-post *ngFor=\"let p of posts\" [post]=\"p\"></app-post>\n</div>\n\n<button mat-fab color=\"primary\" class=\"float-button\" (click)=\"openDialog()\">\n    <mat-icon>\n        add\n    </mat-icon>\n</button>","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { APP_BASE_HREF } from '@angular/common';\nimport { BrowserAnimationsModule } from  '@angular/platform-browser/animations';\nimport {MatButtonModule} from '@angular/material/button';\nimport {MatDialogModule} from '@angular/material/dialog';\nimport {MatInputModule} from '@angular/material/input';\nimport {MatSelectModule} from '@angular/material/select';\nimport {MatIconModule} from '@angular/material/icon';\nimport {MatDividerModule} from '@angular/material/divider';\nimport {MatChipsModule} from '@angular/material/chips';\nimport {MatToolbarModule} from '@angular/material/toolbar';\nimport {MatBadgeModule} from '@angular/material/badge';\nimport { PostComponent } from './post/post.component';\nimport {MatCardModule} from '@angular/material/card';\nimport { FlexLayoutModule } from \"@angular/flex-layout\";\nimport { PostDialogComponent } from './post-dialog/post-dialog.component';\nimport { FormsModule }   from '@angular/forms';\nimport { PostService } from './post.service';\nimport { HttpClientModule } from '@angular/common/http';\n\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    PostComponent,\n    PostDialogComponent,\n    \n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    BrowserAnimationsModule,\n    FlexLayoutModule,\n    MatButtonModule,\n    MatDialogModule,\n    MatInputModule,\n    MatIconModule,\n    MatSelectModule,\n    MatDividerModule,\n    MatChipsModule,\n    MatToolbarModule,\n    MatBadgeModule,\n    MatCardModule,\n    FormsModule,\n    HttpClientModule\n  ],\n  entryComponents: [\n    PostDialogComponent\n  ],\n  providers: [PostService, {provide: APP_BASE_HREF, useValue : '/' }],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { Component, OnInit } from '@angular/core';\nimport { MatDialogRef } from '@angular/material/dialog';\nimport { Post } from '../post';\n\n@Component({\n  selector: 'app-post-dialog',\n  templateUrl: './post-dialog.component.html',\n  styleUrls: ['./post-dialog.component.css']\n})\nexport class PostDialogComponent implements OnInit {\n\n  public nomeArquivo: string = '';\n\n  public dados = {\n    post: new Post(\"\", \"\", \"\", \"\",  \"\"),\n    arquivo: null,\n  }\n\n  constructor(\n    public dialogref: MatDialogRef<PostDialogComponent>\n  ) { }\n\n  ngOnInit(): void {\n  }\n\n  mudouarquivo(event){\n    // console.log(event.target.files[0]);\n    this.nomeArquivo = event.target.files[0].name;\n    this.dados.arquivo = event.target.files[0];\n  }\n\n  salvar(){\n    this.dialogref.close(this.dados);\n  }\n\n  cancelar(){\n    this.dialogref.close(null);\n  }\n\n}\n","<div fxLayout=\"column\" fxLayoutAlign=\"space-around left\" >\n    <div fxLayout=\"row\" fxLayoutAlign=\"space-between\">\n        <mat-form-field fxFlex=\"50\">\n            <input matInput placeholder=\"Seu Nome\" [(ngModel)]=\"dados.post.nome\">\n            <mat-hint>Digite aqui o seu nome</mat-hint>\n        </mat-form-field>\n\n        <mat-form-field fxFlex=\"40\">\n            <input matInput placeholder=\"Seu Email\" [(ngModel)]=\"dados.post.email\">\n            <mat-hint>Digite aqui o seu email</mat-hint>\n        </mat-form-field>\n    </div>\n\n    <div fxLayout=\"row\" fxLayoutAlign=\"space-between\">\n        <mat-form-field fxFlex=\"50\">\n            <input matInput placeholder=\"Seu titulo\" [(ngModel)]=\"dados.post.titulo\">\n            <mat-hint>Digite aqui o seu titulo</mat-hint>\n        </mat-form-field>\n\n        <mat-form-field fxFlex=\"40\">\n            <input matInput placeholder=\"Seu sub titulo\" [(ngModel)]=\"dados.post.subTitulo\">\n            <mat-hint>Digite aqui o sub titulo</mat-hint>\n        </mat-form-field>\n    </div>\n\n    <mat-form-field>\n        <textarea matInput placeholder=\"Deixe aqui sua mensagem\" [(ngModel)]=\"dados.post.mensagem\"></textarea>\n    </mat-form-field>\n</div>\n\n<input type=\"file\" style=\"display: none;\" (change)=\"mudouarquivo($event)\" #fileinput>\n\n<button mat-stroked-button color=\"primary\" (click)=\"fileinput.click()\">\n    <mat-icon>\n        add_a_photo\n    </mat-icon>\n    Adicionar uma foto\n</button>\n\n<p *ngIf=\"nomeArquivo!=''\">\n    <strong>Arquivo: </strong>{{nomeArquivo}}\n    <mat-icon color=\"primary\">done</mat-icon>\n</p>\n\n<br><br>\n\n<div style=\"text-align: center;\">\n    <button mat-raised-button color=\"primary\" (click)=\"salvar()\">OK</button>\n    <button mat-raised-button color=\"warn\" (click)=\"cancelar()\">Cancelar</button>\n</div>","import { Injectable } from '@angular/core';\nimport { HttpClient, HttpEventType, HttpEvent } from '@angular/common/http';\nimport { Post } from './post';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class PostService { \n\n  public posts: Post[] = [];\n  \n  constructor(private http: HttpClient) {\n      this.http.get(\"/api/\").subscribe(\n          (posts: any[]) => {\n              for (let p of posts) {\n                  this.posts.push(\n                      new Post(p.nome, p.titulo, p.subTitulo, p.email, p.mensagem, p.arquivo, p.id, p.likes)\n                  )\n              }\n          }\n      );\n  }\n\n  salvar(post: Post, file: File){\n      const uploadData = new FormData();\n\n      uploadData.append('nome', post.nome);\n      uploadData.append('email', post.titulo);\n      uploadData.append('titulo', post.titulo);\n      uploadData.append('subTitulo', post.subTitulo);\n      uploadData.append('mensagem', post.mensagem);\n      uploadData.append('arquivo', file);\n\n      this.http.post(\"/api/\", uploadData, { reportProgress: true, observe: 'events' }).subscribe((event: any) => {\n            if (event.type == HttpEventType.Response) {\n              // console.log(event);\n              let p: any = event.body;\n              this.posts.push(\n                new Post(p.nome, p.titulo, p.subTitulo, p.email, p.mensagem, p.arquivo, p.id, p.likes)\n              )\n            }\n\n            if (event.type == HttpEventType.UploadProgress) {\n              console.log('UploadProgress');\n              console.log(event);\n            }\n          }\n      );\n  }\n}\n","export class Post{\n    constructor(\n        public nome      : string,\n        public titulo    : string,\n        public subTitulo : string,\n        public email     : string,\n        public mensagem  : string,\n        //parametros opcionais\n        public arquivo?  : string,\n        public id?       : number,\n        public likes?    : number\n    ){}\n}","import { Component, OnInit, Input } from '@angular/core';\nimport { Post } from '../post';\n\n\n@Component({\n  selector: 'app-post',\n  templateUrl: './post.component.html',\n  styleUrls: ['./post.component.css']\n})\nexport class PostComponent implements OnInit {\n\n  @Input() post: Post;\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<mat-card fxFlex class=\"card\">\n    <mat-card-header>\n      <div mat-card-avatar></div>\n      <mat-card-title>{{post.titulo}}</mat-card-title>\n      <mat-card-subtitle>{{post.subTitulo}}</mat-card-subtitle>\n    </mat-card-header>\n    <img mat-card-image src=\"/storage/{{post.arquivo}}\" alt=\"Photo of a Shiba Inu\">\n    <mat-card-content>\n      <p>\n        {{post.mensagem}}\n      </p>\n    </mat-card-content>\n    <mat-card-actions>\n      <button mat-button>LIKE</button>\n      <button mat-button>SHARE</button>\n    </mat-card-actions>\n  </mat-card>","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"],"sourceRoot":"webpack:///"}