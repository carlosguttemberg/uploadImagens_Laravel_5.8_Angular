{"version":3,"sources":["webpack:///$_lazy_route_resource lazy namespace object","webpack:///src/app/app-routing.module.ts","webpack:///src/app/app.component.ts","webpack:///src/app/app.component.html","webpack:///src/app/app.module.ts","webpack:///src/app/post-dialog/post-dialog.component.ts","webpack:///src/app/post-dialog/post-dialog.component.html","webpack:///src/app/post.service.ts","webpack:///src/app/post.ts","webpack:///src/app/post/post.component.ts","webpack:///src/app/post/post.component.html","webpack:///src/environments/environment.ts","webpack:///src/main.ts"],"names":["webpackEmptyAsyncContext","req","Promise","resolve","then","e","Error","code","keys","module","exports","id","routes","AppRoutingModule","forRoot","imports","AppComponent","dialog","postService","title","posts","dialogRef","open","width","afterClosed","subscribe","result","salvar","post","arquivo","openDialog","selector","templateUrl","styleUrls","AppModule","provide","useValue","declarations","entryComponents","providers","bootstrap","PostDialogComponent","dialogref","nomeArquivo","dados","event","target","files","name","close","mudouarquivo","cancelar","PostService","http","get","p","push","nome","titulo","subTitulo","email","mensagem","likes","file","uploadData","FormData","append","reportProgress","observe","type","Response","body","UploadProgress","console","log","providedIn","Post","PostComponent","environment","production","bootstrapModule","catch","err","error"],"mappings":"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","file":"main-es5.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\n\nconst routes: Routes = [];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","import { Component } from '@angular/core';\nimport { Post } from './post';\nimport { MatDialog } from '@angular/material/dialog';\nimport { PostDialogComponent } from './post-dialog/post-dialog.component';\nimport { PostService } from './post.service';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'postImagens';\n  public posts: Post[];\n\n  constructor(public dialog: MatDialog, public postService: PostService){}\n  \n  ngOnInit(){\n    this.posts = this.postService.posts;\n  }\n\n  openDialog(){\n    const dialogRef = this.dialog.open(PostDialogComponent, {width: '600px'});\n\n    dialogRef.afterClosed().subscribe(\n      (result) => { if(result){\n                      this.postService.salvar(result.post, result.arquivo)\n                    } \n      }\n    );\n  }\n}\n","<mat-toolbar color=\"primary\">\n    <span>Projeto Laravel + Angular</span>\n</mat-toolbar>\n\n<mat-divider></mat-divider>\n\n<div fxLayout=\"row wrap\" fxLayoutAlign=\"space-around stretch\">\n    <app-post *ngFor=\"let p of posts\" [post]=\"p\"></app-post>\n</div>\n\n<button mat-fab color=\"primary\" class=\"float-button\" (click)=\"openDialog()\">\n    <mat-icon>\n        add\n    </mat-icon>\n</button>","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { APP_BASE_HREF } from '@angular/common';\nimport { BrowserAnimationsModule } from  '@angular/platform-browser/animations';\nimport {MatButtonModule} from '@angular/material/button';\nimport {MatDialogModule} from '@angular/material/dialog';\nimport {MatInputModule} from '@angular/material/input';\nimport {MatSelectModule} from '@angular/material/select';\nimport {MatIconModule} from '@angular/material/icon';\nimport {MatDividerModule} from '@angular/material/divider';\nimport {MatChipsModule} from '@angular/material/chips';\nimport {MatToolbarModule} from '@angular/material/toolbar';\nimport {MatBadgeModule} from '@angular/material/badge';\nimport { PostComponent } from './post/post.component';\nimport {MatCardModule} from '@angular/material/card';\nimport { FlexLayoutModule } from \"@angular/flex-layout\";\nimport { PostDialogComponent } from './post-dialog/post-dialog.component';\nimport { FormsModule }   from '@angular/forms';\nimport { PostService } from './post.service';\nimport { HttpClientModule } from '@angular/common/http';\n\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    PostComponent,\n    PostDialogComponent,\n    \n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    BrowserAnimationsModule,\n    FlexLayoutModule,\n    MatButtonModule,\n    MatDialogModule,\n    MatInputModule,\n    MatIconModule,\n    MatSelectModule,\n    MatDividerModule,\n    MatChipsModule,\n    MatToolbarModule,\n    MatBadgeModule,\n    MatCardModule,\n    FormsModule,\n    HttpClientModule\n  ],\n  entryComponents: [\n    PostDialogComponent\n  ],\n  providers: [PostService, {provide: APP_BASE_HREF, useValue : '/' }],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { Component, OnInit } from '@angular/core';\nimport { MatDialogRef } from '@angular/material/dialog';\nimport { Post } from '../post';\n\n@Component({\n  selector: 'app-post-dialog',\n  templateUrl: './post-dialog.component.html',\n  styleUrls: ['./post-dialog.component.css']\n})\nexport class PostDialogComponent implements OnInit {\n\n  public nomeArquivo: string = '';\n\n  public dados = {\n    post: new Post(\"\", \"\", \"\", \"\",  \"\"),\n    arquivo: null,\n  }\n\n  constructor(\n    public dialogref: MatDialogRef<PostDialogComponent>\n  ) { }\n\n  ngOnInit(): void {\n  }\n\n  mudouarquivo(event){\n    // console.log(event.target.files[0]);\n    this.nomeArquivo = event.target.files[0].name;\n    this.dados.arquivo = event.target.files[0];\n  }\n\n  salvar(){\n    this.dialogref.close(this.dados);\n  }\n\n  cancelar(){\n    this.dialogref.close(null);\n  }\n\n}\n","<div fxLayout=\"column\" fxLayoutAlign=\"space-around left\" >\n    <div fxLayout=\"row\" fxLayoutAlign=\"space-between\">\n        <mat-form-field fxFlex=\"50\">\n            <input matInput placeholder=\"Seu Nome\" [(ngModel)]=\"dados.post.nome\">\n            <mat-hint>Digite aqui o seu nome</mat-hint>\n        </mat-form-field>\n\n        <mat-form-field fxFlex=\"40\">\n            <input matInput placeholder=\"Seu Email\" [(ngModel)]=\"dados.post.email\">\n            <mat-hint>Digite aqui o seu email</mat-hint>\n        </mat-form-field>\n    </div>\n\n    <div fxLayout=\"row\" fxLayoutAlign=\"space-between\">\n        <mat-form-field fxFlex=\"50\">\n            <input matInput placeholder=\"Seu titulo\" [(ngModel)]=\"dados.post.titulo\">\n            <mat-hint>Digite aqui o seu titulo</mat-hint>\n        </mat-form-field>\n\n        <mat-form-field fxFlex=\"40\">\n            <input matInput placeholder=\"Seu sub titulo\" [(ngModel)]=\"dados.post.subTitulo\">\n            <mat-hint>Digite aqui o sub titulo</mat-hint>\n        </mat-form-field>\n    </div>\n\n    <mat-form-field>\n        <textarea matInput placeholder=\"Deixe aqui sua mensagem\" [(ngModel)]=\"dados.post.mensagem\"></textarea>\n    </mat-form-field>\n</div>\n\n<input type=\"file\" style=\"display: none;\" (change)=\"mudouarquivo($event)\" #fileinput>\n\n<button mat-stroked-button color=\"primary\" (click)=\"fileinput.click()\">\n    <mat-icon>\n        add_a_photo\n    </mat-icon>\n    Adicionar uma foto\n</button>\n\n<p *ngIf=\"nomeArquivo!=''\">\n    <strong>Arquivo: </strong>{{nomeArquivo}}\n    <mat-icon color=\"primary\">done</mat-icon>\n</p>\n\n<br><br>\n\n<div style=\"text-align: center;\">\n    <button mat-raised-button color=\"primary\" (click)=\"salvar()\">OK</button>\n    <button mat-raised-button color=\"warn\" (click)=\"cancelar()\">Cancelar</button>\n</div>","import { Injectable } from '@angular/core';\nimport { HttpClient, HttpEventType, HttpEvent } from '@angular/common/http';\nimport { Post } from './post';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class PostService { \n\n  public posts: Post[] = [];\n  \n  constructor(private http: HttpClient) {\n      this.http.get(\"/api/\").subscribe(\n          (posts: any[]) => {\n              for (let p of posts) {\n                  this.posts.push(\n                      new Post(p.nome, p.titulo, p.subTitulo, p.email, p.mensagem, p.arquivo, p.id, p.likes)\n                  )\n              }\n          }\n      );\n  }\n\n  salvar(post: Post, file: File){\n      const uploadData = new FormData();\n\n      uploadData.append('nome', post.nome);\n      uploadData.append('email', post.titulo);\n      uploadData.append('titulo', post.titulo);\n      uploadData.append('subTitulo', post.subTitulo);\n      uploadData.append('mensagem', post.mensagem);\n      uploadData.append('arquivo', file);\n\n      this.http.post(\"/api/\", uploadData, { reportProgress: true, observe: 'events' }).subscribe((event: any) => {\n            if (event.type == HttpEventType.Response) {\n              // console.log(event);\n              let p: any = event.body;\n              this.posts.push(\n                new Post(p.nome, p.titulo, p.subTitulo, p.email, p.mensagem, p.arquivo, p.id, p.likes)\n              )\n            }\n\n            if (event.type == HttpEventType.UploadProgress) {\n              console.log('UploadProgress');\n              console.log(event);\n            }\n          }\n      );\n  }\n}\n","export class Post{\n    constructor(\n        public nome      : string,\n        public titulo    : string,\n        public subTitulo : string,\n        public email     : string,\n        public mensagem  : string,\n        //parametros opcionais\n        public arquivo?  : string,\n        public id?       : number,\n        public likes?    : number\n    ){}\n}","import { Component, OnInit, Input } from '@angular/core';\nimport { Post } from '../post';\n\n\n@Component({\n  selector: 'app-post',\n  templateUrl: './post.component.html',\n  styleUrls: ['./post.component.css']\n})\nexport class PostComponent implements OnInit {\n\n  @Input() post: Post;\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<mat-card fxFlex class=\"card\">\n    <mat-card-header>\n      <div mat-card-avatar></div>\n      <mat-card-title>{{post.titulo}}</mat-card-title>\n      <mat-card-subtitle>{{post.subTitulo}}</mat-card-subtitle>\n    </mat-card-header>\n    <img mat-card-image src=\"/storage/{{post.arquivo}}\" alt=\"Photo of a Shiba Inu\">\n    <mat-card-content>\n      <p>\n        {{post.mensagem}}\n      </p>\n    </mat-card-content>\n    <mat-card-actions>\n      <button mat-button>LIKE</button>\n      <button mat-button>SHARE</button>\n    </mat-card-actions>\n  </mat-card>","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"]}